spring:
  application:
    name: cloud-serial-consumer
server:
  port: 11111
eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:9000/eureka/,http://localhost:9001/eureka/

hystrix:
  threadpool:
    default:
      coreSize: 5  #并发执行的最大线程数，默认10
  command:
    default:
      execution:
        isolation:
#          配置隔离策略
#          strategy: ExecutionIsolationStrategy.SEMAPHORE
#          strategy: ExecutionIsolationStrategy.THREAD
          thread:
            timeoutInMilliseconds: 8000
      circuitBreaker:
#        触发熔断的最小请求次数 默认没10秒   “20”个请求
#        注意，此处熔断 针对的是方法，即微服务的调用者
#      即使针对的是同一个微服务，甚至功能完全一样，但却是两个方法，熔断的效果也将要彼此独立
        requestVolumeThreshold: 5
#        熔断多少秒后去尝试请求
        sleepWindowInMilliseconds: 1000000000  #默认5000ms
#        触发熔断的失败请求最小占比，默认50%
        errorThresholdPercentage: 50  #默认50%

feign:
  hystrix:
    enabled: true
  client:
    config:
      cloud-payment-service:
        loggerLever: FULL
logging:
  level:
    club.sulinxx.spring.cloud.feign.PaymentClient: debug
#    暴露dashboard 端点
management:
  endpoints:
    web:
      exposure:
        include: '*'

turbine:
#  要监控的微服务列表
  app-config: cloud-payment-service
  cluster-name-expression: "'default'"
